plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = "com.bot"
version = "0.0.1-SNAPSHOT"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    dotenvVersion = "3.1.0"
    geminiVersion = "1.8.0"
    aiSpringVersion = "1.0.0"
}

dependencies {
    implementation("com.google.genai:google-genai:$geminiVersion")
    implementation("io.github.cdimascio:dotenv-java:$dotenvVersion")
    implementation("org.springframework.ai:spring-ai-starter-model-openai:$aiSpringVersion")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.ai:spring-ai-starter-model-openai")
    compileOnly("org.projectlombok:lombok")
    developmentOnly("org.springframework.boot:spring-boot-docker-compose")
    developmentOnly("org.springframework.ai:spring-ai-spring-boot-docker-compose")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    developmentOnly("org.springframework.ai:spring-ai-spring-boot-docker-compose:$aiSpringVersion")
}


tasks.named('test') {
    useJUnitPlatform()
}
